[{"path":"https://matthewkling.github.io/phylospatial/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 phylospatial authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matthewkling.github.io/phylospatial/articles/alpha-diversity.html","id":"diversity-measures","dir":"Articles","previous_headings":"","what":"Diversity measures","title":"Alpha phylogenetic diversity","text":"ps_diversity() function calculates following alpha diversity measures: TR: Terminal richness, .e. richness terminal taxa (many cases species). binary data total number terminals site, quantitative data sum probability abundance values. TE: Terminal endemism, .e. total endemism-weighted diversity terminal taxa (.k.. “weighted endemism”) CR: Clade richness, .e. richness taxa levels (equivalent PD cladogram) CE: Clade endemism, .e. total endemism-weighted diversity taxa levels (equivalent PE cladrogram) PD: Phylogenetic diversity PE: Phylogenetic endemism, .e. endemism-weighted PD RPD: Relative phylogenetic diversity, .e. branch length mean resident (equivalent PD / CR) RPE: Relative phylogenetic endemism, .e. mean endemism-weighted branch length (equivalent PE / CE) ShPD: Shannon’s pylogenetic diversity, .k.“phylogenetic entropy” ShPE: Shannon’s pylogenetic diversity, weighted endemism SiPD: Simpson’s phylogenetic diversity SiPE: Simpson’s phylogenetic diversity, weighted endemism measures use quantitative community data provided. “Endemism” inverse total occurrence mass (sum presence, probability, abundance values) across sites analysis. See ?ps_diversity equations giving derivation metric. Let’s compute full set metrics phylospatial data set. Since data raster-based, default function return SpatRaster layer measure. ’ll make plots PD PE:","code":"div <- ps_diversity(ps, metric = \"all\") tm_shape(div$PD) +        tm_raster(palette = \"inferno\", style = \"cont\") +       tm_layout(legend.outside = TRUE) tm_shape(div$PE) +        tm_raster(palette = \"inferno\", style = \"cont\") +       tm_layout(legend.outside = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/articles/alpha-diversity.html","id":"null-model-randomization","dir":"Articles","previous_headings":"","what":"Null model randomization","title":"Alpha phylogenetic diversity","text":"can also use randomization calculate statistical significance diversity metrics null model, using ps_rand() function. default, function uses quantize(), stratified randomization scheme designed use continuous occurrence data, combination \"curveball\" algorithm. Let’s run 100 randomizations (necessary real analysis) metrics, plot results PE. quantile value gives proportion randomizations observed PE greater randomized PE given grid cell. (wanted identify “statistically significant” grid cells one-tailed test alpha = 0.05, cells values greater 0.95.)  numerous alternative options randomization algorithms use, depending type occurrence data (probability, binary, abundance) depending attributes terminal community matrix (fill, row column sums, etc.) want hold fixed. example, ’s randomization abundance data set, using \"abuswap_c\" algorithm provided vegan::nullmodel:","code":"rand <- ps_rand(ps, n_rand = 10, progress = FALSE) tm_shape(rand$qPE) +        tm_raster(palette = \"inferno\", style = \"cont\") +       tm_layout(legend.outside = TRUE) ps2 <- ps_simulate(data_type = \"abundance\") rand2 <- ps_rand(ps2, fun = \"nullmodel\", method = \"abuswap_c\", progress = FALSE)"},{"path":"https://matthewkling.github.io/phylospatial/articles/alpha-diversity.html","id":"canape","dir":"Articles","previous_headings":"","what":"CANAPE","title":"Alpha phylogenetic diversity","text":"Many things can done randomization results like ones generated . One thing can use classify significant endemism hotspots “categorical analysis neo- paleo-endemism” (CANAPE, Mishler et al. 2014). function ps_canape() uses significance values PE, RPE, CE, returned ps_rand(), categorize sites five endemism cateogories. ’s example moss data; case, three five categories occur result (areas significant neo- mixed-endemism present):","code":"cp <- ps_canape(rand, alpha = .05) terra::plot(cp)"},{"path":"https://matthewkling.github.io/phylospatial/articles/beta-diversity.html","id":"dissimilarity","dir":"Articles","previous_headings":"","what":"Dissimilarity","title":"Phylogenetic beta diversity","text":"package provides range methods calculating pairwise community phylogenetic distances among locations. can calculate phylogenetic versions quantitative community dissimilarity metric available trough vegan package, including various predefined indices provided vegan::vegdist well custom indices specified vegan::designdist. default metric Bray-Curtis distance, also known quantitative Sorensen’s dissimilarity. Additional choices allow partitioning dissimilarity turnover nestedness components. Dissimilarity computed using function ps_add_dissim(), adds distance matrix dissim slot phylospatial data set. just want matrix , can use ps_dissim(). addition specifying dissimilarity index use, functions include options different ways scale phylogenetic community matrix calculating dissimilarity. Setting endemism = TRUE scale every lineage’s occurrence values sum 1 across sites, giving greater weight narrowly distributed taxa. Setting normalize = TRUE scales every site’s total occurrence value sum 1 across taxa, results distance matrix emphasizes proportional differences composition rather alpha diversity gradients. Let’s run example using quantitative Sorensen’s index, weighted endemism. Printing result, can see now contains dissimilarity data:","code":"ps <- ps_add_dissim(ps, method = \"sorensen\", endemism = TRUE, normalize = TRUE) ps #> `phylospatial` object #>   - 884 lineages across 1116 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: sorensen"},{"path":"https://matthewkling.github.io/phylospatial/articles/beta-diversity.html","id":"ordination","dir":"Articles","previous_headings":"","what":"Ordination","title":"Phylogenetic beta diversity","text":"done , can assess spatial turnover patterns couple ways: ordination clustering. Ordination, implemented function ps_ordinate(), reduces dimensionality phylogenetic community matrix, making possible visualize analyze dominant axes variation. Various ordination algorithms can selected. Let’s perform PCA, make maps first four dimensions:  can also qualitatively visualize compositional patterns converting ordination axes set colors representing similar two sites , using ps_rgb() function. Let’s , using \"nmds\" (nonmetric multidimensional scaling) ordination algorithm, plot result using tmap::tm_rgb():","code":"ps %>%       ps_ordinate(method = \"pca\", k = 4) %>%       tm_shape() +       tm_raster(palette = \"PiYG\", style = \"cont\") +       tm_layout(title = \"Phylogenetic community ordination\") ps %>%       ps_rgb(method = \"nmds\") %>%       tm_shape() +       tm_rgb(max.value = 1, interpolate = FALSE) +       tm_layout(title = \"Phylogenetic community ordination\")"},{"path":"https://matthewkling.github.io/phylospatial/articles/beta-diversity.html","id":"regionalization","dir":"Articles","previous_headings":"","what":"Regionalization","title":"Phylogenetic beta diversity","text":"can also perform formal cluster analysis splits landscape set evolutionary bioregions, using ps_regions() function. , need specify clustering method number clusters (k). Choices method include k-means various hierarchical clustering methods; note results sometimes highly sensitive method selected. hierarchical methods require dissimilarity matrix calculated first running ps_add_dissim(), k-means . Choosing k usually subjective. Many alternative methods proposed literature identify “optimal” number clusters data set, ecological data often inherently characterized continuous gradients rather discrete provinces, case value k may clearly fit best. can use function ps_regions_eval() help evaluate well different choices k fit data comparing variance explained different numbers clusters. Let’s , using \"average\" hierarchical clustering method: evaluation plot, looks like value k = 3 stands distinct “elbow” explained variance, negative curvature greatest distance 1:1 line, though choices also reasonable. Let’s generate results three regions, make map zones:","code":"ps_regions_eval(ps, k = 1:15, plot = TRUE, method = \"average\") ps %>%       ps_regions(k = 3, method = \"average\") %>%       tm_shape() +       tm_raster(style = \"cat\", palette = \"Dark2\",                 title = \"phylogenetic region\") +       tm_layout(legend.outside = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Spatial phylogentic data","text":"vignette demonstrates basic structure creation spatial phylogenetic data set, first step analysis using R package. Spatial phylogenetic analyses require two essential ingredients: data geographic distributions set organisms, phylogeny representing evolutionary relationships. package stores data objects class 'phylospatial'. core idea spatial phylogenetics analyses account every every single “lineage” phylogenetic tree, including terminals larger clades. lineage geographic range comprising collective ranges terminal(s) clade, single branch segment whose length represents evolutionary history shared terminals terminals. calculating biodiversity metrics, every lineage’s occurrence site gets weighted branch length. vignette, ’ll create lightweight example phylospatial object, look components understand structured, demonstrate nuanced use cases real data. Finally, ’ll show phylospatial objects can also used traditional non-phylogenetic biodiversity data analyses, cases incorporating phylogeny impossible undesirable.","code":""},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"a-minimal-example","dir":"Articles","previous_headings":"","what":"A minimal example","title":"Spatial phylogentic data","text":"Let’s begin creating simple phylospatial object. , use phylospatial() function, two required arguments: tree, phylogeny class phylo, comm, community data set representing geographic distributions terminal taxa (usually species). code , simulate random tree five terminal taxa, raster data set 100 grid cells containing occurrence probabilities terminal, layer names corresponding species tree. (differentiating feature phylospatial library supports quantitative data types like probabilities abundances, addition binary community data.) pass phylospatial():","code":"library(phylospatial); library(terra); library(ape); library(sf)  # simulate data set.seed(1234) n_taxa <- 5 x <- y <- 10 tree <- rtree(n_taxa) comm <- rast(array((sin(seq(0, pi*12, length.out = n_taxa * x * y)) + 1)/2,                     dim = c(x, y, n_taxa))) names(comm) <- tree$tip.label  # create phylospatial object ps <- phylospatial(comm, tree) ps #> `phylospatial` object #>   - 8 lineages across 100 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: none"},{"path":[]},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"phylogeny","dir":"Articles","previous_headings":"Structure of a phylospatial object","what":"Phylogeny","title":"Spatial phylogentic data","text":"phylospatial object list six elements. Let’s look turn, starting tree. phylogeny simulated, tree class phylo 5 tips 3 larger clades. Note branch lengths input tree scaled sum 1. can use plot() function view tree.","code":"names(ps) #> [1] \"comm\"      \"tree\"      \"spatial\"   \"data_type\" \"clade_fun\" \"dissim\"  ps$tree #>  #> Phylogenetic tree with 5 tips and 4 internal nodes. #>  #> Tip labels: #>   t5, t4, t3, t1, t2 #>  #> Rooted; includes branch length(s).  plot(ps, \"tree\")"},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"community-matrix","dir":"Articles","previous_headings":"Structure of a phylospatial object","what":"Community matrix","title":"Spatial phylogentic data","text":"key component comm, matrix containing occurrence data. Although supplied community data raster, ’s stored matrix, row grid cell column taxon. Let’s take look matrix. can also plot community data, re-casts spatial data set (raster, case).  can see addition 5 terminal taxa, data set also includes geographic ranges 3 larger clades. Internally, phylospatial() function constructs ranges every multi-tip clade tree, based topology tree community data tips. specific way clade ranges constructed depends type community data used. package supports three data types: \"probability\", \"abundance\", \"binary\". Recall data probabilities; specified explicitly setting data_type = \"probability\" constructed phylospatial object, function detected based values data set, can confirm correctly checking ps$data_type. probabilities, default function used calculate clade occurrence values gives probability least one member clade present given site. Abundance binary data default functions. (can also override defaults supplying clade_fun—example, occurrence probabilities knew strongly non-independent among species, specify clade_fun = max.) function used given data set can accessed ps$clade_fun. Note can also specify clade ranges phylospatial() rather letting build , setting build = FALSE. might want , example, modeled distributions every clade addition every terminal species data set.","code":"head(ps$comm) #>         clade1    clade2        t5         t4    clade3          t3         t1 #> [1,] 0.9980319 0.9889042 0.5000000 0.97780849 0.8226247 0.781536164 0.18807934 #> [2,] 0.9953701 0.9919546 0.8428239 0.94881279 0.4245239 0.421627315 0.00500815 #> [3,] 0.9997640 0.9997100 0.9991060 0.67560320 0.1861159 0.104363637 0.09127841 #> [4,] 0.9517871 0.9194606 0.8838080 0.30684210 0.4013750 0.002378797 0.39994761 #> [5,] 0.9172596 0.5786829 0.5596673 0.04318460 0.8036150 0.171166120 0.76305863 #> [6,] 0.9936764 0.2254502 0.2030598 0.02809548 0.9918358 0.518882839 0.98303074 #>              t2 #> [1,] 0.03467274 #> [2,] 0.28671168 #> [3,] 0.65480785 #> [4,] 0.93866795 #> [5,] 0.98383430 #> [6,] 0.76573040  plot(ps, \"comm\")"},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"spatial-data","dir":"Articles","previous_headings":"Structure of a phylospatial object","what":"Spatial data","title":"Spatial phylogentic data","text":"spatial component last key piece phylospatial object. (element haven’t mentioned dissim, covered vignette beta diversity.) spatial component object contains spatial reference data geographic locations communities found row community matrix. example, spatial data raster layer inherited SpatRaster data supplied comm. can also supply vector data (points, lines, polygons) sf object. spatial data raster, polygon, line format, phylospatial check features equal area length, important assumption underlying various functions package. Also note spatial data isn’t required; community data provided matrix works just fine.","code":""},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"a-realistic-example","dir":"Articles","previous_headings":"","what":"A realistic example","title":"Spatial phylogentic data","text":"Now let’s look creating phylospatial data set using real data. , ’ll use example “moss” data set ships package, representing phylogeny modeled occurrence probabilities several hundred species moss California. function moss() returns pre-constructed phylospatial object based data, let’s build one scratch. code ’ll load raster data set layer occurrence probabilities species, phylogeny representing evolutionary relationships. ’ll pass phylospatial().","code":"moss_comm <- rast(system.file(\"extdata\", \"moss_comm.tif\", package = \"phylospatial\")) moss_tree <- read.tree(system.file(\"extdata\", \"moss_tree.nex\", package = \"phylospatial\")) ps <- phylospatial(moss_comm, moss_tree) plot(ps, \"comm\") plot(ps, \"tree\", type = \"fan\", show.tip.label = FALSE)"},{"path":"https://matthewkling.github.io/phylospatial/articles/phylospatial-data.html","id":"non-phylogenetic-data","dir":"Articles","previous_headings":"A realistic example","what":"Non-phylogenetic data","title":"Spatial phylogentic data","text":"phylospatial library obviously designed phylogenetic analyses, ’s worth noting also supports non-phylogenetic analyses. cases phylogeny unavailable traditional species-based biodiversity analysis desired, can create data set calling phylospatial() without providing tree. major functions package still work, assume taxa comm independent equally weighted. fact, traditional species-based methods can actually considered specific case general phylogenetic methods, species assumed connected “star” phylogeny single polytomy equal branch lengths. phylospatial, support non-phylogenetic data implemented creating star phylogeny phylogeny provided user. ’s looks simple community data created :","code":"ps <- phylospatial(comm) plot(ps, \"tree\", type = \"fan\")"},{"path":"https://matthewkling.github.io/phylospatial/articles/prioritization.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Conservation prioritization","text":"Phylogenetic diversity originally conceived metric inform conservation, spatial conservation planning core application spatial phylogenetics. Spatial conservation planning involves identifying priority locations actions like creation new protected areas. diversity sophisticated tools available conservation planning. package performs conservation prioritization using stepwise algorithm selects ordered ranking priority sites creation new protected areas. Unlike many algorithms, method can utilize quantitative community data (rather just binary presence-absence data), can utilize quantitative data relative degree protection offered different types protected area (rather just binary protected-unprotected data). Prioritization handled function ps_prioritize(). site’s priority ranking function : current protection level occurrence quantities lineages present site, including terminal taxa larger clades evolutionary branch lengths lineages phylogeny, represent unique evolutionary heritage impact protecting site lineages’ range-wide protection levels compositional complementarity site, high-priority sites, existing protected areas relative cost protecting site lambda, free parameter determining shape conservation benefit function (see ) vignette covers basic conservation optimization, probabilistic prioritization, detail conservation benefit functions.","code":""},{"path":"https://matthewkling.github.io/phylospatial/articles/prioritization.html","id":"basic-optimization","dir":"Articles","previous_headings":"","what":"Basic optimization","title":"Conservation prioritization","text":"Let’s use example data set California mosses perform conservation optimization ranks every grid cell across state. every step iterative ps_prioritize() algorithm, marginal value fully protecting individual site calculated. basic optimization (method = \"optimal\"), site highest marginal value marked protected, marginal values re-calculated, process repeated sites (max_iter sites) protected. Sites selected earlier process considered higher priority. addition required spatial phylogenetic data set, two optional data inputs one might want provide. first init, location effectiveness existing protected areas. can binary data representing protected versus unprotected sites, continuous data values 0 1 representing degree protection (example, perhaps given spatial unit partially covered protected land, land management sites like national forests partly oriented toward biodiversity protection). conservation optimization, protection level newly protected sites raised 1 (alternative level specified parameter level), greater benefit resulting sites lower initial values. second optional variable cost, representing relative cost protecting different sites across study area. Sites high benefit--cost ratios prioritized. example, ’ll just specify arbitrary initial protection gradient north south cost gradient east west, though course real analysis require actual data. simplicity ’ll provide vectors, also provide raster layers matching spatial element data set. First let’s load libraries ’ll need, initialize phylospatial data set using example data California mosses. (See vignette(\"phylospatial-data\") details constructing phylospatial objects.) ’ll also create variable called con specifying (arbitrary) initial conservation values, pass ps_prioritize() spatial phylogenetic data. Plotting result, highest-priority sites low rank values, shown yellow.","code":"library(phylospatial); library(tmap); library(magrittr)  ps <- moss() init <- seq(1, 0, length.out = nrow(ps$comm)) cost <- runif(nrow(ps$comm), 10, 1000) priority <- ps_prioritize(ps, init = init, cost = cost, progress = FALSE)  tm_shape(priority) +        tm_raster(palette = \"-inferno\", style = \"log10\",                 title = \"conservation\\npriorities\") +        tm_layout(legend.outside = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/articles/prioritization.html","id":"probabilistic-prioritization","dir":"Articles","previous_headings":"","what":"Probabilistic prioritization","title":"Conservation prioritization","text":"routine shown gives optimal priority ranking, based assumption sites selected optimal order. informative result relatively lightweight computation, limitations. First, assuming optimal behavior may unrealistic. second, since algorithm values complementarity (.e. protection sites distinct, non-redundant biotic communities), sites high conservation value attractive real-world priorities can entirely overlooked compositionally similar sites already selected slightly higher value. Probabilistic prioritization, activated method = \"probable\", addresses issues. iteration, instead protecting site highest marginal value done \"optimal\" method, approach protects random site, selected probability function site’s marginal value. trade-individual runs algorithm can highly variable, algorithm needs run many times, prioritization rankings summarized across repeated runs. using probabilistic method, ps_prioritize() returns summary statistics site including average priority rank across reps, various quantiles rank distribution, proportion reps site among top-ranked sites. Running large number n_reps can substantially increase computation times, two ways help mitigate run times. First, can use parallel processing increasing n_cores default 1. Second, can set max_iter relatively small number, stops algorithm number sites added. example, data set 1000 sites, setting max_iter = 10 can reduce run times almost two orders magnitude. won’t get full rank prioritization sites individual rep, get proportion reps site top 10, arguably even useful. Let’s demonstrate ; ’ll use 1000 reps expediency, 10000 better real analysis:","code":"priority <- ps_prioritize(ps, init = init, cost = cost, n_reps = 1000,                           method = \"prob\", max_iter = 10, progress = FALSE)  tm_shape(priority$top10) +        tm_raster(palette = \"inferno\", style = \"cont\",                 title = \"proporiton of runs\\nin which site was\\ntop-10 priority\") +        tm_layout(legend.outside = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/articles/prioritization.html","id":"conservation-benefit-functions","dir":"Articles","previous_headings":"","what":"Conservation benefit functions","title":"Conservation prioritization","text":"examples , used default value lambda parameter. lambda controls relative priority placed protecting initial populations every taxon versus populations phylogenetically distinct taxa. precisely, determines shape benefit() function converts proportion taxon’s range protected conservation benefit measure used calculating marginal value sites prioritization. can use function plot_lambda() compare shapes benefit functions different lambda values: value lambda = 0 places equal marginal value protecting additional populations taxon regardless much range already protected. default lambda = 1 places higher priority protecting populations unprotected taxa, still places value increasing protection taxa already reasonably well protected. Increasing value lambda = 2 strongly emphasizes protecting first percent taxon’s range, places virtually value increasing protection beyond 50%. Lambda can also negative, places greater value “finishing job” protecting entire range lineage “starting job” protection portion range; negative values likely useful practical applications. Deciding value use subjective choice, consider makes sense particular use case. can also useful compare different values understand sensitive results may choice. , let’s compare optimizations using lambda values -1, 0, 1, 2:  case, increase value lambda, can see priorities shifting away core area center map away northwest part study area, cover areas southeast portion study area. highlight differences, let’s make map difference two right-hand panels (lambda 0 versus 2):","code":"plot_lambda() lambda <- -1:2 priority <- terra::rast(lapply(lambda, function(x){       ps_prioritize(ps, init = init, lambda = x, progress = FALSE) })) #> Warning in ps_prioritize(ps, init = init, lambda = x, progress = FALSE): #> choosing a negative value for `lambda` is not generally recommended. priority <- setNames(priority, paste(\"lambda =\", lambda))  tm_shape(priority) +       tm_raster(palette = \"-inferno\", style = \"log10\",                 title = \"conservation\\npriorities\") +       tm_layout(legend.outside = TRUE) diff <- log(priority[[4]]) - log(priority[[2]]) tm_shape(diff) +       tm_raster(palette = \"-PRGn\", style = \"cont\",                 title = \"change in log rank when\\nchanging lambda from 0 to 2\") +       tm_layout(legend.outside = TRUE) #> Variable(s) \"NA\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."},{"path":"https://matthewkling.github.io/phylospatial/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Kling. Author, maintainer, copyright holder.","code":""},{"path":"https://matthewkling.github.io/phylospatial/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kling M (2025). phylospatial: Spatial Phylogenetic Analysis. R package version 1.0.0, https://matthewkling.github.io/phylospatial/.","code":"@Manual{,   title = {phylospatial: Spatial Phylogenetic Analysis},   author = {Matthew Kling},   year = {2025},   note = {R package version 1.0.0},   url = {https://matthewkling.github.io/phylospatial/}, }"},{"path":"https://matthewkling.github.io/phylospatial/index.html","id":"phylospatial-","dir":"","previous_headings":"","what":"Spatial Phylogenetic Analysis","title":"Spatial Phylogenetic Analysis","text":"phylospatial R package spatial phylogenetic analysis. field spatial phylogenetics focuses accounting evolutionary relationships among taxa describing biodiversity patterns, approach number advantages species-based accounting. package provides set functions build analyze phylospatial data: phylospatial() constructs spatial phylogenetic data set community data tree. ps_diversity() calculates range phylogenetic diversity endemism metrics. ps_rand() computes significance values diversity metrics using null model randomizations. ps_dissim() calculates pairwise community phylogenetic beta diversity matrix. ps_ordinate() performs community ordination reduce dimensionality data set. ps_regions() clusters sites phylogenetically similar biogeographic regions. ps_prioritize() performs spatial optimization identify conservation priorities. key difference phylospatial spatial phylogenetic R libraries functions package work binary presence-absence data also continuous community data types occurrence probabilities abundances. quantities treated weights computations throughout package, avoiding need discard information thresholding continuous data.","code":""},{"path":"https://matthewkling.github.io/phylospatial/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Spatial Phylogenetic Analysis","text":"vignette(\"phylospatial-data\") gives details constructing phylospatial datasets different types data. vignette(\"alpha-diversity\") demonstrates calculation alpha phylogenetic diversity endemism measures, including statistical hypothesis testing using randomization-based null models. vignette(\"beta-diversity\") shows calculate phylogenetic beta diversity measures including nestedness turnover, well phylogenetic ordination regionalization visualize phylogenetic community structure. vignette(\"prioritization\") explains perform phylogenetic conservation prioritization.","code":""},{"path":"https://matthewkling.github.io/phylospatial/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial Phylogenetic Analysis","text":"","code":"# you can install the package from CRAN: install.packages(\"phylospatial\")  # or the development version from GitHub: remotes::install_github(\"matthewkling/phylospatial\")"},{"path":"https://matthewkling.github.io/phylospatial/reference/benefit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate taxon conservation benefit — benefit","title":"Calculate taxon conservation benefit — benefit","text":"Nonlinear function converts proportion range conserved conservation \"benefit.\"","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/benefit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate taxon conservation benefit — benefit","text":"","code":"benefit(x, lambda = 1)"},{"path":"https://matthewkling.github.io/phylospatial/reference/benefit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate taxon conservation benefit — benefit","text":"x Fraction taxon range protected (value 0 1). lambda Shape parameter.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/benefit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate taxon conservation benefit — benefit","text":"Value 0 1.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/moss.html","id":null,"dir":"Reference","previous_headings":"","what":"Load California moss spatial phylogenetic data — moss","title":"Load California moss spatial phylogenetic data — moss","text":"Get example phylospatial data set based phylogeny modeled distributions 443 moss species across California. data set coarser version data Kling et al. (2024). contains occurrence probabilities, available raster polygon spatial formats.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/moss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load California moss spatial phylogenetic data — moss","text":"","code":"moss(format = \"raster\")"},{"path":"https://matthewkling.github.io/phylospatial/reference/moss.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Load California moss spatial phylogenetic data — moss","text":"Kling, Gonzalez-Ramirez, Carter, Borokini, Mishler (2024) bioRxiv, https://doi.org/10.1101/2024.12.16.628580.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/moss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load California moss spatial phylogenetic data — moss","text":"format Either \"raster\" (default) \"polygon\"","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/moss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load California moss spatial phylogenetic data — moss","text":"phylospatial object","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/moss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load California moss spatial phylogenetic data — moss","text":"","code":"moss() #> `phylospatial` object #>   - 884 lineages across 1116 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: none"},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial-package.html","id":null,"dir":"Reference","previous_headings":"","what":"phylospatial: Spatial Phylogenetic Analysis — phylospatial-package","title":"phylospatial: Spatial Phylogenetic Analysis — phylospatial-package","text":"Conduct various analyses spatial phylogenetics. Use data evolutionary tree geographic distributions terminal taxa compute diversity endemism metrics, test significance null model randomization, analyze community turnover biotic regionalization, perform spatial conservation prioritizations. functions support quantitative community data addition binary data.","code":""},{"path":[]},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"phylospatial: Spatial Phylogenetic Analysis — phylospatial-package","text":"Maintainer: Matthew Kling mattkling@berkeley.edu (ORCID) [copyright holder]","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spatial phylogenetic object — phylospatial","title":"Create a spatial phylogenetic object — phylospatial","text":"function creates phylospatial object. core data type phylospatial library, required input functions package. two essential components spatial phylogenetic object phylogenetic tree community data set.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spatial phylogenetic object — phylospatial","text":"","code":"phylospatial(   comm,   tree = NULL,   spatial = NULL,   data_type = c(\"auto\", \"probability\", \"binary\", \"abundance\", \"other\"),   clade_fun = NULL,   build = TRUE,   check = TRUE,   area_tol = 0.01 )"},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spatial phylogenetic object — phylospatial","text":"comm Community data representing distribution terminal taxa across sites. Can matrix column per terminal row per site, SpatRaster one layer per terminal, sf data column per terminal. Taxa whose names match column/layer names comm tip labels tree dropped warning (unless build = FALSE). tree Phylogeny class phylo. Terminals whose names match comm dropped warning (unless build = FALSE). argument provided, terminals assumed follow \"star\" tree uniform branch lengths, lead non-phylogenetic versions analyses done resulting phylospatial object. Must rooted tree. spatial optional SpatRaster layer sf object indicating site locations. number cells rows must match comm. Ignored comm SpatRaster sf object. data_type Character giving data type comm. Must \"binary\", \"probability\", \"abundance\", \"auto\" (default), \"\". determines community values clades calculated values terminal taxa. \"binary\" (presence-absence), clade considered present site terminal clade present. \"probability,\" clade probabilities calculated probability least one terminal present site. \"abundance,\" clade abundances calculated sum abundances terminals clade site. \"auto,\" attempt made guess three data types provided. argument ignored clade_fun provided, build = FALSE. \"\", custom clade_fun must supplied. clade_fun Function calculate local community weight clade based community weights tips found given location. Must either NULL (default, case default function selected data_type used) summary function takes numeric vector returns single numeric output. Ignored comm already includes clade ranges. build Logical indicating whether comm already includes clade ranges used instead building new ones. Default TRUE. FALSE, clade_fun ignored, checks performed harmonize tip labels community data, columns comm must exactly match order tree edges including tips larger clades. clade ranges included comm build = TRUE, dropped new clade ranges built. check Logical indicating whether community data validated. Default TRUE. area_tol Numeric value giving tolerance variation area sites. Default 0.01. coefficient variation area length spatial units (e.g. grid cells) exceeds value, error result. check performed various functions library assume sites equal area. argument ignored check = FALSE spatial data provided.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spatial phylogenetic object — phylospatial","text":"phylospatial object, list containing following elements: \"data_type\": Character indicating community data type \"tree\": Phylogeny class phylo \"comm\": Community matrix, including column every terminal taxon every larger clade. Column order corresponds tree edge order. \"spatial\": SpatRaster sf providing spatial coordinates rows comm. May missing spatial data supplied. \"dissim\": community dissimilary matrix class dist indicating pairwise phylogenetic dissimilarity sites. Missing unless ps_dissim(..., add = TRUE) called.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a spatial phylogenetic object — phylospatial","text":"function formats input data phylospatial object. Beyond validating, cleaning, restructing data, main operation performs compute community occurrence data every internal clade tree. given clade site, community data terminals clade used calculate clade's occurrence value site. described , calculation can happen various ways, depending type community data (e.g. binary, probability, abundance) want summarize . default, function tries detect data_type use automatically select appropriate summary function described , can override providing function clade_fun. can also disable construction clade community matrix columns altogether setting build = FALSE). atypical, might want use option distribution data data clades (e.g. modeling occurrence probabilities clades addition terminal species), community data comes previously-constructed phylospatial object.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/phylospatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a spatial phylogenetic object — phylospatial","text":"","code":"# load species distribution data and phylogeny comm <- terra::rast(system.file(\"extdata\", \"moss_comm.tif\", package = \"phylospatial\")) tree <- ape::read.tree(system.file(\"extdata\", \"moss_tree.nex\", package = \"phylospatial\"))  # construct `phylospatial` object ps <- phylospatial(comm, tree) #> Community data type detected: probability ps #> `phylospatial` object #>   - 884 lineages across 1116 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: none   # construct `phylospatial` object without a tree # (works, with a warning) ps <- phylospatial(comm) #> Warning: No phylogenetic tree was provided; any analyses using this `phylospatial` object will be non-phylogenetic. #> Community data type detected: probability"},{"path":"https://matthewkling.github.io/phylospatial/reference/plot.phylospatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a phylospatial object — plot.phylospatial","title":"Plot a phylospatial object — plot.phylospatial","text":"Plot phylospatial object","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/plot.phylospatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a phylospatial object — plot.phylospatial","text":"","code":"# S3 method for class 'phylospatial' plot(x, y = c(\"tree\", \"comm\"), max_taxa = 12, ...)"},{"path":"https://matthewkling.github.io/phylospatial/reference/plot.phylospatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a phylospatial object — plot.phylospatial","text":"x phylospatial object y Either \"tree\" \"comm\", indicating component plot. max_taxa Integer giving maximum number taxon ranges plot y = \"tree\". ... Additional arguments passed plotting methods, depending y class x$spatial. y = \"tree\", see plot.phylo; y = \"comm\", see plot plot.sf.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/plot.phylospatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a phylospatial object — plot.phylospatial","text":"plot tree community data.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/plot.phylospatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a phylospatial object — plot.phylospatial","text":"","code":"ps <- ps_simulate() plot(ps, \"tree\")  plot(ps, \"comm\")"},{"path":"https://matthewkling.github.io/phylospatial/reference/plot_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot alternative lambda values — plot_lambda","title":"Plot alternative lambda values — plot_lambda","text":"Show plot illustrating alternative values lambda parameter ps_prioritize. Lambda determines shape \"benefit\" function determines conservation value protecting given proportion geographic range species clade. Positive values place higher priority protecting additional populations largely unprotected taxa, whereas negative values place higher priority protecting additional populations relatively well-protected taxa. default value used ps_prioritize 1.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/plot_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot alternative lambda values — plot_lambda","text":"","code":"plot_lambda(lambda = c(-1, -0.5, 0, 0.5, 2, 1))"},{"path":"https://matthewkling.github.io/phylospatial/reference/plot_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot alternative lambda values — plot_lambda","text":"lambda vector lambda values plot","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/plot_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot alternative lambda values — plot_lambda","text":"Plots figure","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/plot_lambda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot alternative lambda values — plot_lambda","text":"","code":"plot_lambda()  plot_lambda(seq(0, 3, .1))"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_add_dissim.html","id":null,"dir":"Reference","previous_headings":"","what":"Add community dissimilarity data to a phylospatial object — ps_add_dissim","title":"Add community dissimilarity data to a phylospatial object — ps_add_dissim","text":"function calculates pairwise phylogenetic dissimilarity communities returns phylospatial object dissimilarity data added element called dissim. See ps_dissim details.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_add_dissim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add community dissimilarity data to a phylospatial object — ps_add_dissim","text":"","code":"ps_add_dissim(ps, method = \"sorensen\", ...)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_add_dissim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add community dissimilarity data to a phylospatial object — ps_add_dissim","text":"ps phylospatial data set. method Dissimilarity metric; see ps_dissim details. ... Additional arguments passed ps_dissim, fun, endemism, normalize.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_add_dissim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add community dissimilarity data to a phylospatial object — ps_add_dissim","text":"ps new dissim element added.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_add_dissim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add community dissimilarity data to a phylospatial object — ps_add_dissim","text":"","code":"ps <- ps_simulate(data_type = \"prob\") ps_add_dissim(ps) #> `phylospatial` object #>   - 18 lineages across 400 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: sorensen  ps_add_dissim(ps, fun = \"vegdist\", method = \"jaccard\", endemism = TRUE) #> `phylospatial` object #>   - 18 lineages across 400 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: jaccard"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"function classifies sites areas significant endemism according scheme Mishler et al. (2014). Categorization based randomization quantile values PE, RPE, CE (Mishler et al. call \"PE comparison tree\").","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"","code":"ps_canape(rand, alpha = 0.05)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"rand object returned running ps_rand . alpha Numeric value 0 1 giving one-tailed p-value threshold use determining significance.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"object class rand containing variable called \"canape\", values 0-4 corresponding -significant, mixed-, super-, neo-, paleo-endemism, respectively.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"Endemism significance categories defined follows: Endemism significant: neither PE CE significantly high alpha. Significant neoendemism: PE CE significantly high alpha; RPE significantly low alpha / 2 (two-tailed test). Significant paleoendemism: PE CE significantly high alpha; RPE significantly high alpha / 2 (two-tailed test).. Significant mixed-endemism: PE CE significantly high alpha; RPE significant. Significant super-endemism: PE CE significantly high alpha / 5; RPE significant.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"Mishler, B. D., Knerr, N., González-Orozco, C. E., Thornhill, . H., Laffan, S. W., & Miller, J. T. (2014). Phylogenetic measures biodiversity neo-paleo-endemism Australian Acacia. Nature Communications, 5(1), 4473.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorical Analysis of Neo- and Paleo-Endemism (CANAPE) — ps_canape","text":"","code":"# classic CANAPE using binary data and the curveball algorithm # (note that a real analysis would require a much higher `n_rand`) set.seed(123456) ps <- ps_simulate(n_tips = 50, data_type = \"binary\") rand <- ps_rand(ps, metric = c(\"PE\", \"RPE\", \"CE\"),                 fun = \"nullmodel\", method = \"curveball\",                 n_rand = 25, burnin = 10000, progress = FALSE) canape <- ps_canape(rand) terra::plot(canape)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary randomization tests including CANAPE — ps_canaper","title":"Binary randomization tests including CANAPE — ps_canaper","text":"function wrapper around canaper::cpr_rand_test(). works binary community data. largely redundant ps_rand() ps_canape(), flexible supporting data sets non-binary community data. However, function runs faster, supports custom null models via make.commsim.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary randomization tests including CANAPE — ps_canaper","text":"","code":"ps_canaper(ps, null_model = \"curveball\", spatial = TRUE, ...)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary randomization tests including CANAPE — ps_canaper","text":"ps phylospatial object null_model see ?canaper::cpr_rand_test() spatial Logical: function return spatial object (TRUE, default) vector (FALSE). ... arguments passed canaper::cpr_rand_test()","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary randomization tests including CANAPE — ps_canaper","text":"matrix SpatRaster, sf column layer metric.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary randomization tests including CANAPE — ps_canaper","text":"function runs canaper::cpr_rand_test(); see help function details. also runs canaper::cpr_classify_endem() result, includes resulting classification additional variable, 'endem_type', output. 'endem_type' values 0-4 correspond -significant, neo, paleo, mixed, super endemesim, respectively.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binary randomization tests including CANAPE — ps_canaper","text":"Mishler, B. D., Knerr, N., González-Orozco, C. E., Thornhill, . H., Laffan, S. W., & Miller, J. T. (2014). Phylogenetic measures biodiversity neo-paleo-endemism Australian Acacia. Nature Communications, 5(1), 4473. Nitta, J. H., Laffan, S. W., Mishler, B. D., & Iwasaki, W. (2023). canaper: categorical analysis neo‐paleo‐endemism R. Ecography, 2023(9), e06638.","code":""},{"path":[]},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_canaper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary randomization tests including CANAPE — ps_canaper","text":"","code":"if(requireNamespace(\"canaper\")){       ps <- ps_simulate(data_type = \"binary\")       terra::plot(ps_canaper(ps)$pd_obs_p_upper) }"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_dissim.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantitative phylogenetic dissimilarity — ps_dissim","title":"Quantitative phylogenetic dissimilarity — ps_dissim","text":"function calculates pairwise phylogenetic dissimilarity communities. works binary quantitative community data sets. wide range phylogentic community dissimilarity metrics supported, including phylogenetic Sorensen's Jaccard's distances, turnover nestedness components Sorensen's distance (Baselga & Orme, 2012), phylogenetic versions community distance indices provided vegan library. function also includes options scale community matrix order focus analysis endemism /proportional differences community composition. results function can visualized using ps_rgb ps_regions, used variety statistical analyses.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_dissim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantitative phylogenetic dissimilarity — ps_dissim","text":"","code":"ps_dissim(   ps,   method = \"sorensen\",   fun = c(\"vegdist\", \"designdist\", \"chaodist\"),   endemism = FALSE,   normalize = FALSE,   ... )"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_dissim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantitative phylogenetic dissimilarity — ps_dissim","text":"ps phylospatial object. method Character indicating dissimilarity index use: \"sorensen\": Sorensen's dissimilarity, .k.. Bray-Curtis distance (default) \"sorensen_turnover\": turnover component Sorensen's dissimilarity, .k.. Simpson's. \"sorensen_nestedness\": nestedness component Sorensen's dissimilarity. valid method passed fun. options, see documentation functions. fun Character indicating general distance function vegan library use: \"vegdist\" (default), \"designdist\", \"chaodist\". (functions explicitly designed calculate phylogenetic beta diversity, use incorporates phylogenetic components.) argument ignored one three \"sorensen\" methods selected. endemism Logical indicating whether community values divided column totals (taxon range sizes) derive endemism computing distances. normalize Logical indicating whether community values divided row totals (community sums) computing distances. TRUE, dissimilarity based proportional community composition. Normalization applied endemism. ... Additional arguments passed fun.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_dissim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantitative phylogenetic dissimilarity — ps_dissim","text":"pairwise phylogenetic dissimilarity matrix class dist.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_dissim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantitative phylogenetic dissimilarity — ps_dissim","text":"Graham, C. H., & Fine, P. V. (2008). Phylogenetic beta diversity: linking ecological evolutionary processes across space time. Ecology Letters, 11(12), 1265-1277. Baselga, ., & Orme, C. D. L. (2012). betapart: R package study beta diversity. Methods Ecology Evolution, 3(5), 808-812. Pavoine, S. (2016). guide family phylogenetic dissimilarity measures among sites. Oikos, 125(12), 1719-1732.","code":""},{"path":[]},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_dissim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantitative phylogenetic dissimilarity — ps_dissim","text":"","code":"# example data set: ps <- moss()  # The default arguments give Sorensen's quantitative dissimilarity index # (a.k.a. Bray-Curtis distance): d <- ps_dissim(ps)  # Specifying a custom formula explicitly via `designdist`; # (this is the Bray-Curtis formula, so it's equivalent to the prior example) d <- ps_dissim(ps, method = \"(b+c)/(2*a+b+c)\",       fun = \"designdist\", terms = \"minimum\", abcd = TRUE)  # Alternative arguments can specify a wide range of dissimilarity measures; # here's endemism-weighted Jaccard's dissimilarity: d <- ps_dissim(ps, method = \"jaccard\", endemism = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"function calculates variety diversity endemism metrics including Faith's phylogenetic diversity, Shannon phylogenetic entropy, Simpson phylogentic diversity, relative phylogentic diversity, richness clades, richness terminals (typically species), versions metrics weighted endemism (.e. rarity). continuous community data (probabilities abundances) provided, used calculations, giving quantitative versions classic binary metrics.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"","code":"ps_diversity(ps, metric = \"all\", spatial = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"ps phylospatial object (created phylospatial() ps_simulate()). metric Character vector containing abbreviation one diversity metrics listed details . Can also specify \"\" (default) calculate available metrics. spatial Logical: function return spatial object (TRUE, default) matrix (FALSE)?","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"matrix, sf data frame, SpatRaster column layer requested diversity metric.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"function calculates following metrics: TD—Terminal Diversity, .e. richness terminal taxa (many cases species): \\(\\sum_{t}{p_t}\\) TE—Terminal Endemism, .e. total endemism-weighted diversity terminal taxa, .k.. \"weighted endemism\": \\(\\sum_{t}{p_t r_t^{-1}}\\) CD—Clade Diversity, .e. richness taxa levels (equivalent PD cladogram): \\(\\sum_{b}{p_b}\\) CE—Clade Endemism, .e. total endemism-weighted diversity taxa levels (equivalent PE cladrogram): \\(\\sum_{b}{p_b r_b^{-1}}\\) PD—Phylogenetic Diversity: \\(\\sum_{b}{L_b p_b}\\) PE—Phylogenetic Endemism, .e. endemism-weighted PD: \\(\\sum_{b}{L_b p_b r_b^{-1}}\\) RPD—Relative Phylogenetic Diversity, .e. branch length mean resident (equivalent PD / CR): \\(\\sum_{b}{L_b p_b} / \\sum_{b}{p_b}\\) RPE—Relative Phylogenetic Endemism, .e. mean endemism-weighted branch length (equivalent PE / CE): \\(\\sum_{b}{L_b p_b r_b^{-1}} / \\sum_{b}{p_b r_b^{-1}}\\) ShPD—Shannon Phylogenetic Diversity, .k.. \"phylogenetic entropy\": \\(-\\sum_{b}{L_b n_b log(n_b)}\\) ShPE–Shannon phylogenetic Endemism, endemism-weighted version ShPD: \\(-\\sum_{b}{L_b n_b log(e_b) r_b^{-1}}\\) SiPD—Simpson Phylogenetic Diversity: \\(1 / \\sum_{b}{L_b n_b^2}\\) SiPE—Simpson Phylogenetic Endemism, endemism-weighted version SiPD: \\(1 / \\sum_{b}{L_b r_b^{-1} e_b^2}\\) \\(b\\) indexes taxa including terminals larger clades; \\(t\\) indexes terminals ; \\(p_i\\) occurrence value (binary, probability, abundance) clade/terminal \\(\\) given community; \\(L_b\\) length phylogenetic branch segment unique clade \\(b\\); \\(r_i\\) sum \\(p_i\\) across sites. Shannon Simpson indices, nonzero elements \\(p_b\\) used, \\(n_b = p_b / \\sum_{b}{p_b L_b}\\), \\(e_b = p_b / \\sum_{b}{p_b L_b r_b^{-1}}\\).","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"Faith, D. P. (1992). Conservation evaluation phylogenetic diversity. Biological Conservation, 61(1), 1-10. Laffan, S. W., & Crisp, M. D. (2003). Assessing endemism multiple spatial scales, example Australian vascular flora. Journal Biogeography, 30(4), 511-520. Rosauer, D. . N., Laffan, S. W., Crisp, M. D., Donnellan, S. C., & Cook, L. G. (2009). Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular Ecology, 18(19), 4061-4072. Allen, B., Kon, M., & Bar-Yam, Y. (2009). new phylogenetic diversity measure generalizing Shannon index application phyllostomid bats. American Naturalist, 174(2), 236-243. Chao, ., Chiu, C. H., & Jost, L. (2010). Phylogenetic diversity measures based Hill numbers. Philosophical Transactions Royal Society B: Biological Sciences, 365(1558), 3599-3609. Mishler, B. D., Knerr, N., González-Orozco, C. E., Thornhill, . H., Laffan, S. W., & Miller, J. T. (2014). Phylogenetic measures biodiversity neo-paleo-endemism Australian Acacia. Nature Communications, 5(1), 4473. Kling, M. M., Mishler, B. D., Thornhill, . H., Baldwin, B. G., & Ackerly, D. D. (2019). Facets phylodiversity: evolutionary diversification, divergence survival conservation targets. Philosophical Transactions Royal Society B, 374(1763), 20170397.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_diversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate spatial phylogenetic diversity and endemism metrics — ps_diversity","text":"","code":"div <- ps_diversity(moss()) terra::plot(div)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_get_comm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get phylospatial community data — ps_get_comm","title":"Get phylospatial community data — ps_get_comm","text":"Get phylospatial community data","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_get_comm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get phylospatial community data — ps_get_comm","text":"","code":"ps_get_comm(ps, tips_only = TRUE, spatial = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_get_comm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get phylospatial community data — ps_get_comm","text":"ps phylospatial object. tips_only Logical indicating whether terminal taxa (TRUE, default) taxa (FALSE) returned. spatial Logical indicating whether spatial (SpatRaster sf) object returned. Default TRUE; FALSE, matrix returned.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_get_comm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get phylospatial community data — ps_get_comm","text":"Either SpatRaster layer every taxon, sf data frame variable every taxon, depending data type used create ps.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_get_comm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get phylospatial community data — ps_get_comm","text":"","code":"ps <- ps_simulate()  # the defaults return a spatial object of terminal taxa distributions: ps_get_comm(ps) #> class       : SpatRaster  #> dimensions  : 20, 20, 10  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 20, 0, 20  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> varnames    : t7  #>               t3  #>               t2  #>               ... #> names       :        t7,        t3,        t2,        t6,        t9,       t10, ...  #> min values  : 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, ...  #> max values  : 0.1524076, 0.1410909, 0.4263353, 0.4862675, 0.7616251, 0.1501068, ...   # get distributions for all taxa, as a matrix pcomm <- ps_get_comm(ps, tips_only = FALSE, spatial = FALSE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_ordinate.html","id":null,"dir":"Reference","previous_headings":"","what":"Community phylogenetic ordination — ps_ordinate","title":"Community phylogenetic ordination — ps_ordinate","text":"Perform ordination reduces spatial phylogenetic data set k dimensions, using one several alternative ordination algorithms.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_ordinate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community phylogenetic ordination — ps_ordinate","text":"","code":"ps_ordinate(ps, method = c(\"nmds\", \"cmds\", \"pca\"), k = 3, spatial = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_ordinate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Community phylogenetic ordination — ps_ordinate","text":"ps phylospatial object non-null dissim component, generated ps_add_dissim. method Ordination method, either \"pca\" (principal component analysis implemented via stats::prcomp()), \"cmds\" (classical MDS, implemented via stats::cmdscale()), \"nmds\" (default, nonmetric MDS, implemented via vegan::metaMDS(); slower often preferred). k Positive integer giving desired number output dimensions; default 3. spatial Logical indicating whether spatial object (inherited ps) returned. Default TRUE.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_ordinate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Community phylogenetic ordination — ps_ordinate","text":"matrix spatial object k variables.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_ordinate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Community phylogenetic ordination — ps_ordinate","text":"","code":"ps <- ps_add_dissim(moss()) ord <- ps_ordinate(ps, method = \"cmds\", k = 4) terra::plot(ord)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic conservation prioritization — ps_prioritize","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"Create ranking conservation priorities using optimal probabilistic forward stepwise selection. Prioritization accounts occurrence quantities lineages present site, including terminal taxa larger clades; evolutionary branch lengths lineages phylogeny, represent unique evolutionary heritage; impact protecting site lineages' range-wide protection levels; compositional complementarity site, high-priority sites, existing protected areas; site's initial protection level; relative cost protecting site; free parameter \"lambda\" determining shape conservation benefit function.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"","code":"ps_prioritize(   ps,   init = NULL,   cost = NULL,   lambda = 1,   protection = 1,   max_iter = NULL,   method = c(\"optimal\", \"probable\"),   trans = function(x) replace(x, which(rank(-x) > 25), 0),   n_reps = 100,   n_cores = 1,   summarize = TRUE,   spatial = TRUE,   progress = interactive() )"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"ps phylospatial object. init Optional numeric vector spatial object giving starting protection status site across study area. Values 0 1 represent existing level conservation effectiveness site. argument specified, assumed existing reserves present. cost Optional numeric vector spatial object giving relative cost protecting site. Values positive, greater values indicating higher cost conserving site. argument specified, cost assumed uniform across sites. lambda Shape parameter taxon conservation benefit function. can real number. Positive values, default value 1, place higher priority conserving first part range given species clade, negative values (typically used) place higher priority fully protecting important taxa (small ranges long branches) rather partially protecting taxa. See function plot_lambda illustration alternative lambda values. protection Degree protection proposed new reserves (number 0 1, meaning init). max_iter Integer giving max number iterations perform stopping, .e. max number sites rank. method Procedure selecting site add reserve network iteration: \"optimal\": default, selects site highest marginal value iteration. optimal approach gives result time. \"probable\": option selects site randomly, selection probabilities calculated function sites' marginal values. approach gives different prioritization ranking time optimization performed, n_reps optimizations performed, ranks site summarized across repetitions. trans function transforms marginal values relative selection probabilities; used method = \"probable\". function take vector positive numbers representing marginal values return equal-length vector positive numbers representing site's relative likelihood selected. default function returns marginal value site top 25 highest-value sites, zero otherwise. n_reps Number random repetitions ; used method = \"probable\". Depending data set, large number reps (default 100) may needed order achieve stable result. may computational barrier large data sets; multicore processing via n_cores can help. n_cores Number compute cores use parallel processing; used method = \"probable\". summarize Logical: summary statistics across reps (TRUE, default) reps (FALSE) returned? relevant method = \"probable\". spatial Logical: function return spatial object (TRUE, default) matrix (FALSE)? progress Logical: progress bar displayed?","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"Matrix spatial object containing ranking conservation priorities. Lower rank values represent higher conservation priorities. sites lower priority max_iter rank value equal number sites input data set (.e. lowest possible priority). method = \"optimal\". result contains single variable \"priority\" containing ranking. method = \"probable\" summarize = TRUE, \"priority\" variable gives average rank across reps, variables labeled \"pctX\" give Xth percentile rank distribution site, variables labeled \"topX\" give proportion reps site top X highest-priority sites, variables labeled \"treX\" give ratio representing \"topX\" relative null expectation often \"topX\" occur chance alone. method = \"probable\" summarize = FALSE, result contains full set n_rep solutions, representing ranking, low values representing higher priorities..","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"function uses forward stepwise selection algorithm Kling et al. (2019) generate ranked conservation prioritization. Prioritization begins starting protected lands network identified init, provided. iteration, marginal conservation value fully protecting site calculated, site selected added reserve network. Selection can happen either \"optimal\" \"probable\" fashion described method argument. process repeated sites fully protected max_iter reached, sites selected early process considered higher conservation priorities. benefit probabilistic approach relaxes potentially unrealistic assumption protected land actually added optimal order. Since algorithm avoids compositional redundancy high-priority sites, optimal approach never place high priority site high marginal value redundant slightly higher-value site, whereas probabilistic approach select similar frequencies (though never randomized run). Every time new site protected algorithm progresses, changes marginal conservation value sites. Marginal value increase conservation benefit arise fully protecting given site, divided cost protecting site. calculated function site's current protection level, quantitative presence probability abundance terminal taxa larger clades present site, evolutionary branch lengths phylogeny, impact protecting site range-wide protection levels, free parameter lambda. lambda determines relative importance protecting small portion every taxon's range, versus fully protecting ranges valuable taxa (longer evolutionary branches smaller geographic ranges).","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"Kling, M. M., Mishler, B. D., Thornhill, . H., Baldwin, B. G., & Ackerly, D. D. (2019). Facets phylodiversity: evolutionary diversification, divergence survival conservation targets. Philosophical Transactions Royal Society B, 374(1763), 20170397.","code":""},{"path":[]},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_prioritize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylogenetic conservation prioritization — ps_prioritize","text":"","code":"# simulate a toy `phylospatial` data set set.seed(123) ps <- ps_simulate()  # basic prioritization p <- ps_prioritize(ps)  # \\donttest{ # specifying locations of initial protected areas # (can be binary, or can be continuous values between 0 and 1) # here we'll create an `init` raster with arbitrary values ranging from 0-1, # using the reference raster layer that's part of our `phylospatial` object protected <- terra::setValues(ps$spatial, seq(0, 1, length.out = 400)) cost <- terra::setValues(ps$spatial, rep(seq(100, 20, length.out = 20), 20)) p <- ps_prioritize(ps, init = protected, cost = cost)  # using probabilistic prioritization p <- ps_prioritize(ps, init = protected, cost = cost,       method = \"prob\", n_reps = 1000, max_iter = 10) terra::plot(p$top10)  # }"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rand.html","id":null,"dir":"Reference","previous_headings":"","what":"Null model randomization analysis of alpha diversity metrics — ps_rand","title":"Null model randomization analysis of alpha diversity metrics — ps_rand","text":"function compares diversity metrics calculated ps_diversity null distributions computed randomizing community matrix. Randomization done using quantize method community matrices containing continuous quantities occurrence probabilities abundances.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null model randomization analysis of alpha diversity metrics — ps_rand","text":"","code":"ps_rand(   ps,   metric = \"all\",   fun = \"quantize\",   method = \"curveball\",   n_rand = 100,   spatial = TRUE,   n_cores = 1,   progress = interactive(),   ... )"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Null model randomization analysis of alpha diversity metrics — ps_rand","text":"ps phylospatial object. metric Character vector giving one diversity metrics calculate; see ps_diversity options. Can also specify \"\" (default) calculate available metrics. fun Null model function use. Must either \"quantize\", \"nullmodel\", actual function: \"nullmodel\": uses nullmodel simulate.nullmodel, vegan package, offer wide range randomization algorithms different properties. \"quantize\": (default) deploys function quantize, routine wrapper around nullmodel, allowing use binary algorithms quantitative data. function accepts community matrix first argument returns randomized version matrix. method One method options listed commsim. fun = \"quantize, must one \"binary\" methods. fun = \"nullmodel\", sure select method appropriate community data_type (binary, quantitative, abundance). argument ignored custom function provided fun. n_rand Integer giving number random communities generate. spatial Logical: function return spatial object (TRUE, default) matrix (FALSE). n_cores Integer giving number compute cores use parallel processing. progress Logical: progress bar displayed? ... Additional arguments passed quantize, simulate.nullmodel, custom function fun. Note nsim argument former two functions used ; specify n_rand instead.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Null model randomization analysis of alpha diversity metrics — ps_rand","text":"matrix row every row x, column every metric specified metric, values indicating proportion randomizations observed diversity metric greater randomized metric. spatial = TRUE, sf SpatRaster object containing data.","code":""},{"path":[]},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Null model randomization analysis of alpha diversity metrics — ps_rand","text":"","code":"# \\donttest{ # simulate a `phylospatial` data set and run randomization with default settings ps <- ps_simulate(data_type = \"prob\") rand <- ps_rand(ps)  # using the default `quantize` function, but with alternative arguments rand <- ps_rand(ps, transform = sqrt, n_strata = 4, priority = \"rows\")  # using binary data ps2 <- ps_simulate(data_type = \"binary\") rand <- ps_rand(ps2, fun = \"nullmodel\", method = \"r2\")  # using abundance data, and demonstrating alternative metric choices ps3 <- ps_simulate(data_type = \"abund\") rand <- ps_rand(ps3, metric = c(\"ShPD\", \"SiPD\"), fun = \"nullmodel\", method = \"abuswap_c\") rand #> class       : SpatRaster  #> dimensions  : 20, 20, 2  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 20, 0, 20  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> varnames    : qShPD  #>               qSiPD  #> names       : qShPD, qSiPD  #> min values  :  0.00,  0.00  #> max values  :  0.03,  0.03  # }"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster analysis to identify phylogenetic regions — ps_regions","title":"Cluster analysis to identify phylogenetic regions — ps_regions","text":"Perform clustering analysis categorizes sites biogeographic regions based phylogenetic community compositional similarity.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster analysis to identify phylogenetic regions — ps_regions","text":"","code":"ps_regions(ps, k = 5, method = \"average\", endemism = FALSE, normalize = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster analysis to identify phylogenetic regions — ps_regions","text":"ps phylospatial object. method anything \"kmeans\", must contain dissim component generated ps_add_dissim. k Number spatial clusters divide region (positive integer). See ps_regions_eval help choose value k comparing variance explained different numbers regions. method Clustering method. Options include methods listed hclust, \"kmeans\". \"kmeans\" selected, dissim component ps ignored. endemism Logical indicating whether community values divided column totals (taxon range sizes) derive endemism. used method = \"kmeans\"; cases information instead supplied ps_add_dissim. normalize Logical indicating whether community values divided row totals (community sums). TRUE, dissimilarity based proportional community composition. happens endemism derived. used method = \"kmeans\"; cases information instead supplied ps_add_dissim.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster analysis to identify phylogenetic regions — ps_regions","text":"raster matrix integer indicating k regions site belongs .","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cluster analysis to identify phylogenetic regions — ps_regions","text":"Daru, B. H., Elliott, T. L., Park, D. S., & Davies, T. J. (2017). Understanding processes underpinning patterns phylogenetic regionalization. Trends Ecology & Evolution, 32(11), 845-860.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster analysis to identify phylogenetic regions — ps_regions","text":"","code":"library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE  # moss example data, using kmeans clustering algorithm plot(ps_regions(moss(\"polygon\"), method = \"kmeans\"))   # to use a hierarchical clustering method, first we have to `ps_add_dissim()` plot(ps_regions(ps_add_dissim(moss(\"polygon\")), k = 7, method = \"average\"))"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate region numbers — ps_regions_eval","title":"Evaluate region numbers — ps_regions_eval","text":"function compares multiple potential values k, number clusters use ps_regions(), help decide well different numbers regions fit data set. value k, performs cluster analysis calculates proportion total variance explained (SSE, sum squared pairwise distances explained). also calculates second-order metrics relationship k SSE. many data sets optimal value k choice often highly subjective, evaluation metrics can help identify potential points variance explained stops increasing quickly k increases.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate region numbers — ps_regions_eval","text":"","code":"ps_regions_eval(ps, k = 1:20, plot = TRUE, ...)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate region numbers — ps_regions_eval","text":"ps phylospatial object. Must contain dissim component generated ps_add_dissim. k Vector positive integers giving possible values k. Values greater number sites data set ignored. plot Logical indicating whether print plot results (TRUE, default) return data frame results (FALSE). ... arguments passed ps_regions.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate region numbers — ps_regions_eval","text":"function generates data frame following columns. plot = FALSE data frame returned, otherwise function prints plot latter variables function k: \"k\": number clusters. \"sse\": proportion total variance explained, variance defined squared pairwise community phylogenetic dissimilarity sites. \"curvature\": local second derivative. Lower (negative) values indicate attractive break-point values k. \"dist11\": distance point 1:1 line plot k vs sse k values interval 1 number sites rescaled unit interval. Higher values indicate attractive values k.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_regions_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate region numbers — ps_regions_eval","text":"","code":"ps <- ps_add_dissim(moss()) ps_regions_eval(ps, k = 1:15, plot = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Map phylospatial data onto RGB color bands — ps_rgb","title":"Map phylospatial data onto RGB color bands — ps_rgb","text":"Perform ordination reduces spatial phylogenetic data set three dimensions can plotted RGB bands color space visualize spatial patterns community phylogenetic composition. function wrapper around ps_ordinate().","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map phylospatial data onto RGB color bands — ps_rgb","text":"","code":"ps_rgb(ps, method = c(\"nmds\", \"cmds\", \"pca\"), trans = identity, spatial = TRUE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map phylospatial data onto RGB color bands — ps_rgb","text":"ps phylospatial object non-null dissim component, generated ps_add_dissim. method Ordination method, either \"pca\" (principal component analysis implemented via stats::prcomp()), \"cmds\" (classical MDS, implemented via stats::cmdscale()), \"nmds\" (default, nonmetric MDS, implemented via vegan::metaMDS(); slower often preferred). trans function giving transformation apply dimension ordinated data. default identity function. Specifying rank generates uniform color distribution. spatial Logical indicating whether spatial object (inherited ps) returned. Default TRUE.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map phylospatial data onto RGB color bands — ps_rgb","text":"matrix spatial object three variables containing RGB color values range 0-1.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map phylospatial data onto RGB color bands — ps_rgb","text":"","code":"ps <- ps_add_dissim(moss()) RGB <- ps_rgb(ps, method = \"cmds\") terra::plotRGB(RGB * 255, smooth = FALSE)"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a toy spatial phylogenetic data set — ps_simulate","title":"Simulate a toy spatial phylogenetic data set — ps_simulate","text":"function generates simple phylospatial object can used testing functions package. intended realistic.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a toy spatial phylogenetic data set — ps_simulate","text":"","code":"ps_simulate(   n_tips = 10,   n_x = 20,   n_y = 20,   data_type = c(\"probability\", \"binary\", \"abundance\"),   spatial_type = c(\"raster\", \"none\"),   seed = NULL )"},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a toy spatial phylogenetic data set — ps_simulate","text":"n_tips Number terminals phylogeny. n_x Number raster cells x dimension landscape. n_y Number raster cells y dimension landscape. data_type Community data type simulated ranges: either \"probability\" (default), \"binary\", \"abundance\". spatial_type Either \"raster\" \"none\". seed Optional integer seed random number generator.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a toy spatial phylogenetic data set — ps_simulate","text":"phylospatial object, comprising random phylogeny community matrix terminal circular geographic range random radius location. spatial reference data SpatRaster.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/ps_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a toy spatial phylogenetic data set — ps_simulate","text":"","code":"# using all the defaults ps_simulate() #> `phylospatial` object #>   - 18 lineages across 400 sites #>   - community data type: probability  #>   - spatial data class: SpatRaster  #>   - dissimilarity data: none   # specifying some arguments plot(ps_simulate(n_tips = 50, n_x = 30, n_y = 40, data_type = \"abundance\"), \"comm\")"},{"path":"https://matthewkling.github.io/phylospatial/reference/quantize.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified randomization of community matrix — quantize","title":"Stratified randomization of community matrix — quantize","text":"community null model method quantitative community data (e.g. abundance occurrence probability). designed adapt binary null model algorithms use quantitative data, can useful quantitative-specific algorithm available desired properties. example, use binary \"curveball\" algorithm preserves row column totals, also approximately preserves marginal distributions rows columns. randomization, data set split strata representing numerical ranges input quantities, separate binary randomization done stratum, results combined produce randomized, quantitative community matrix. See vegan::commsim() details binary quantitative null models.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/quantize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified randomization of community matrix — quantize","text":"","code":"quantize(x, method = \"curveball\", ...)"},{"path":"https://matthewkling.github.io/phylospatial/reference/quantize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified randomization of community matrix — quantize","text":"x Community matrix species rows, sites columns, nonnegative quantities cells. method Null model algorithm, passed vegan::nullmodel. Testing done \"curveball\" algorithm, options use caution. binary methods used. ... Additional arguments, including: n_strata: Integer giving number strata split data . Must 2 greater. Larger values result randomizations less mixing higher fidelity marginal distributions. default 5. transform: function used transform values x assigning n_strata equal intervals. Examples include sqrt, log, rank, etc.; default identity. jitter: Number 0 1, indicating much randomly jitter location stratum boundaries. priority: Either \"rows\", \"cols\", \"neither\", indicating whether randomization within strata prioritize maintaining marginal distributions rows columns input matrix. default, \"neither\", give precedence either dimension. Note interacts method, methods differ margins fixed. arguments passed simulate.nullmodel, seed burnin. default burnin 10000. Note nsim thin ignored, internally set 1.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/quantize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified randomization of community matrix — quantize","text":"randomized version x.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/quantize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratified randomization of community matrix — quantize","text":"","code":"# \\donttest{ # example quantitative community matrix comm <- ps_get_comm(moss(\"polygon\"), tips_only = TRUE, spatial = FALSE)[1:50, 1:50]  # examples of different quantize usage rand <- quantize(comm) rand <- quantize(comm, n_strata = 4, transform = sqrt, priority = \"rows\") rand <- quantize(comm, method = \"swap\", burnin = 10) # (note: this `burnin` value is far too small for a real analysis) # }"},{"path":"https://matthewkling.github.io/phylospatial/reference/to_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a site-by-variable matrix into a SpatRaster or sf object — to_spatial","title":"Convert a site-by-variable matrix into a SpatRaster or sf object — to_spatial","text":"Convert site--variable matrix SpatRaster sf object","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/to_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a site-by-variable matrix into a SpatRaster or sf object — to_spatial","text":"","code":"to_spatial(m, template)"},{"path":"https://matthewkling.github.io/phylospatial/reference/to_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a site-by-variable matrix into a SpatRaster or sf object — to_spatial","text":"m Matrix vector. template SpatRaster layer number cells equal number rows m, sf data frame number rows m.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/to_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a site-by-variable matrix into a SpatRaster or sf object — to_spatial","text":"SpatRaster layer every column m, sf data frame variable every column m, depending data type template.","code":""},{"path":"https://matthewkling.github.io/phylospatial/reference/to_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a site-by-variable matrix into a SpatRaster or sf object — to_spatial","text":"","code":"ps <- moss() to_spatial(ps$comm[, 1:5], ps$spatial) #> class       : SpatRaster  #> dimensions  : 36, 31, 5  (nrow, ncol, nlyr) #> resolution  : 30000, 30000  (x, y) #> extent      : -375000, 555000, -630000, 450000  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=aea +lat_0=0 +lon_0=-120 +lat_1=34 +lat_2=40.5 +x_0=0 +y_0=-4000000 +datum=NAD83 +units=m +no_defs  #> source(s)   : memory #> varnames    : clade1  #>               Sphagnum_teres  #>               clade2  #>               ... #> names       :   clade1, Sphagnum_teres,    clade2, Sphagn~rrosum,    clade3  #> min values  : 0.000000,      0.0000000, 0.0000000,     0.0000000, 0.0000000  #> max values  : 0.996422,      0.5368522, 0.9961039,     0.6190746, 0.9961031"}]
